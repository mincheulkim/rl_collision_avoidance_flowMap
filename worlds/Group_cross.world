show_clock 0
show_clock_interval 10000
resolution 0.2
threads 16
# -1: for maximum run time
#speedup 20
speedup 5
#speedup 1
#speedup -1

#interval_sim 100 # simulation timestep in milliseconds


define sicklaser ranger
(
  sensor(
    pose [ 0 0 0.1 0 ]    # laser position?
    fov 180
    range [ 0.0 6.0 ]     # min, max range
    samples 512
  )
  color "random"
  block( 
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
    # z [0 1]  # try it!  
  )
)


define floorplan model
(
  color "gray30"
  #boundary 1
  # 211110
  boundary 1   

  gui_nose 0
  gui_grid 0
  gui_move 1
  gui_outline 0
  gripper_return 0
  fiducial_return 0
  ranger_return 1.000
  obstacle_return 1
)

# load an environment bitmap
floorplan
(
  name "Group_Corridor"
  size [36.000 24.000 0.800]            # floor size
  pose [0.000 0.000 0.000 0.000]
  bitmap "cross.png"
)

window
(
  size [600 600]         # (important) total window size. in pixels
  
# Camera options 
  scale 35.000           # pixels per meter
  #center [-2.661  -1.640]
  center [ 0.000  0.000]
  #rotate [ 0.000  -32.000 ]
  rotate [ 0.000  0.000 ]


# GUI options
  show_data 1
  show_flags 1
  show_blocks 1
  show_clock 1
  show_footprints 1
  show_grid 1
  show_trailarrows 0
  show_trailrise 0
  show_trailfast 0
  show_occupancy 0

)




define agent position
(
  # actual size
  #size [0.4 0.4 0.4] # sizes from MobileRobots' web site
  size [0.380 0.380 0.220] # sizes from MobileRobots' web site

  localization "gps"
  #localization "odom"   # 220204 work?
  
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  #ranger_return 0.500            	# reflects sonar beams
  ranger_return 1            	# 220204 what if?
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders
  sicklaser(
	pose [ 0.000 0.000 0.000 0.000 ] 
  )
  
  # [ xmin xmax ymin ymax zmin zmax amin amax ]				
  # velocity_bounds [-0.5 0.5 0 0 0 0 -90.0 90.0 ]					
  # acceleration_bounds [-0.5 0.5 0 0 0 0 -90 90.0 ]
  )


define human position
(
  # actual size
  size [0.4 0.4 0.4] # sizes from MobileRobots' web site
  #size [0.380 0.380 0.220] # sizes from MobileRobots' web site

  localization "gps"
  #localization "odom"   # 220204 work?
  
  
  # the pioneer's center of rotation is offset from its center of area
  origin [0.000 0.000 0.000 0.000]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "diff"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  #ranger_return 0.500            	# reflects sonar beams
  ranger_return 1            	# 220204 what if?
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders
  
  
  # [ xmin xmax ymin ymax zmin zmax amin amax ]				
  # velocity_bounds [-0.5 0.5 0 0 0 0 -90.0 90.0 ]					
  # acceleration_bounds [-0.5 0.5 0 0 0 0 -90 90.0 ]
  )



# for init fixed pose start
# For robot(index=0)
agent( pose [0.00 -9.00 0.00 90.00] name "robot" color "red")

# Total 14 humans
# Total 4 Groups
# each group human come start from north to south
# Group 1L: 4 humans
agent( pose [-16.00 1.40 0.00 0.00] color "yellow")   # human1, Leader
agent( pose [-15.50 0.7 0.00 0.00] color "yellow")  # human2
agent( pose [-15.50 -0.7 0.00 0.00] color "yellow")  # human3
agent( pose [-16.00 -1.4 0.00 0.00] color "yellow")  # human3

# Group 2L: 3 humans
agent( pose [-5.00 0.00 0.00 0.00] color "black")    # human4, Leader
agent( pose [-5.00 -1.00 0.00 0.00] color "black")    # human5
agent( pose [-4.00 -1.00 0.00 0.00] color "black")    # human5


# Group 3R: 5 humans
agent( pose [6.20 0.70 0.00 180.00] color "blue")     # human6
agent( pose [5.00 0.0 0.00 180.00] color "blue")     # human7
agent( pose [5.70 -0.60 0.00 180.00] color "blue")     # human8
agent( pose [7.00 -1.20 0.00 180.00] color "blue")     # human8
agent( pose [7.0 0.00 0.00 180.00] color "blue")     # human8

# Group 4R: 2 humans
agent( pose [13.00 1.60 0.00 180.00] color "green")     # human6
agent( pose [13.20 1.00 0.00 180.00] color "green")     # human7




